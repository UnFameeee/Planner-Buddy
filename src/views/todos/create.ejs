<%- include('../partials/header') %>

<div class="container-fluid">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3">Create New Todo</h1>
    <a href="/todos/all" class="btn btn-secondary">
      <i class="fas fa-arrow-left"></i> Back to List
    </a>
  </div>
  
  <% if (typeof error !== 'undefined' && error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 fw-bold text-primary">Todo Information</h6>
    </div>
    <div class="card-body">
      <% if (user) { %>
        <form id="createTodoForm">
          <div class="mb-3">
            <label for="title" class="form-label">Title <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="title" name="title" required>
            <div class="invalid-feedback">Title is required</div>
          </div>
          
          <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="dueDate" class="form-label">Due Date</label>
              <input type="datetime-local" class="form-control" id="dueDate" name="dueDate">
            </div>
            
            <div class="col-md-6">
              <label for="priority" class="form-label">Priority <span class="text-danger">*</span></label>
              <select class="form-select" id="priority" name="priority" required>
                <option value="">Select priority</option>
                <option value="low">Low</option>
                <option value="medium">Medium</option>
                <option value="high">High</option>
              </select>
              <div class="invalid-feedback">Priority is required</div>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="tags" class="form-label">Tags (comma-separated)</label>
            <input type="text" class="form-control" id="tags" name="tags" placeholder="work, personal, urgent">
            <div class="form-text">Enter tags separated by commas</div>
          </div>
          
          <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="isCompleted" name="isCompleted">
            <label class="form-check-label" for="isCompleted">Mark as completed</label>
          </div>
          
          <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <button type="button" class="btn btn-secondary me-md-2" onclick="window.location.href='/todos/all'">Cancel</button>
            <button type="submit" class="btn btn-primary">Create Todo</button>
          </div>
        </form>
      <% } else { %>
        <div class="alert alert-warning">
          <p class="mb-0">You need to be logged in to create todos.</p>
          <a href="/auth/login" class="alert-link">Login here</a> to continue.
        </div>
      <% } %>
    </div>
  </div>
</div>

<% if (user) { %>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('createTodoForm');
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Validate form
      if (!form.checkValidity()) {
        e.stopPropagation();
        form.classList.add('was-validated');
        return;
      }
      
      // Get form data
      const formData = {
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        due_date: document.getElementById('dueDate').value,
        priority: document.getElementById('priority').value,
        tags: document.getElementById('tags').value
      };
      
      try {
        // Show loading state
        const submitButton = form.querySelector('button[type="submit"]');
        const originalText = submitButton.textContent;
        submitButton.disabled = true;
        submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...';
        
        // Send API request
        const response = await axios.post('/todos', formData);
        
        if (response.data.success) {
          // Redirect to todos list
          window.location.href = '/todos/all';
        } else {
          // Show error
          alert(response.data.message || 'Something went wrong. Please try again.');
          submitButton.disabled = false;
          submitButton.textContent = originalText;
        }
      } catch (error) {
        console.error('Error creating todo:', error);
        alert(error.response?.data?.message || 'Error creating todo. Please try again.');
        
        // Reset button state
        const submitButton = form.querySelector('button[type="submit"]');
        submitButton.disabled = false;
        submitButton.textContent = 'Create Todo';
      }
    });
  });
</script>
<% } %>

<%- include('../partials/footer') %> 