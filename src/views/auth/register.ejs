<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/styles.css" rel="stylesheet">
</head>
<body class="bg-light">
  <%- include('../partials/auth-header') %>

  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-6 col-lg-5">
        <div class="card border-0 shadow-sm">
          <div class="card-body p-4 p-md-5">
            <div class="text-center mb-4">
              <i class="fas fa-user-plus fa-3x mb-3" style="color: var(--primary-color);"></i>
              <h2 class="fw-bold">Create Account</h2>
              <p class="text-muted">Join us to start planning your day</p>
            </div>

            <% if (typeof error !== 'undefined' && error) { %>
              <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <%= error %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              </div>
            <% } %>

            <% if (typeof success !== 'undefined' && success) { %>
              <div class="alert alert-success alert-dismissible fade show" role="alert">
                <%= success %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              </div>
            <% } %>

            <form id="registerForm" class="needs-validation" novalidate>
              <div class="mb-4">
                <label for="username" class="form-label">Username</label>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-user text-muted"></i>
                  </span>
                  <input type="text" class="form-control border-start-0" id="username" name="username" required>
                </div>
                <div class="invalid-feedback">Please choose a username.</div>
              </div>

              <div class="mb-4">
                <label for="email" class="form-label">Email</label>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-envelope text-muted"></i>
                  </span>
                  <input type="email" class="form-control border-start-0" id="email" name="email" required>
                </div>
                <div class="invalid-feedback">Please enter a valid email address.</div>
              </div>

              <div class="mb-4">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-lock text-muted"></i>
                  </span>
                  <input type="password" class="form-control border-start-0" id="password" name="password" required>
                  <button class="btn btn-outline-secondary border border-start-0" type="button" id="togglePassword">
                    <i class="far fa-eye"></i>
                  </button>
                </div>
                <div class="invalid-feedback">Please enter a password.</div>
                <div class="form-text">Password must be at least 8 characters long.</div>
              </div>

              <div class="mb-4">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <div class="input-group">
                  <span class="input-group-text bg-light border-end-0">
                    <i class="fas fa-lock text-muted"></i>
                  </span>
                  <input type="password" class="form-control border-start-0" id="confirmPassword" name="confirmPassword" required>
                </div>
                <div class="invalid-feedback">Passwords do not match.</div>
              </div>

              <div class="mb-4">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="agreeTerms" required>
                  <label class="form-check-label text-muted" for="agreeTerms">
                    I agree to the <a href="/terms" class="text-primary">Terms of Service</a> and <a href="/privacy" class="text-primary">Privacy Policy</a>
                  </label>
                  <div class="invalid-feedback">You must agree before submitting.</div>
                </div>
              </div>

              <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">
                  <i class="fas fa-user-plus me-2"></i>
                  Create Account
                </button>
              </div>

              <div class="text-center mt-4">
                <p class="text-muted mb-0">
                  Already have an account? 
                  <a href="/auth/login" class="text-primary fw-bold">Login</a>
                </p>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="/js/auth.service.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('registerForm');
      const togglePassword = document.getElementById('togglePassword');
      const password = document.getElementById('password');
      const confirmPassword = document.getElementById('confirmPassword');
      
      // Toggle password visibility
      togglePassword.addEventListener('click', function() {
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        this.querySelector('i').classList.toggle('fa-eye');
        this.querySelector('i').classList.toggle('fa-eye-slash');
      });
      
      // Custom password validation
      password.addEventListener('input', function() {
        if (this.value.length < 8) {
          this.setCustomValidity('Password must be at least 8 characters long');
        } else {
          this.setCustomValidity('');
        }
      });
      
      // Confirm password validation
      confirmPassword.addEventListener('input', function() {
        if (this.value !== password.value) {
          this.setCustomValidity('Passwords do not match');
        } else {
          this.setCustomValidity('');
        }
      });
      
      // Form submission
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        if (!form.checkValidity()) {
          e.stopPropagation();
          form.classList.add('was-validated');
          return;
        }
        
        const formData = {
          username: document.getElementById('username').value,
          email: document.getElementById('email').value,
          password: password.value
        };
        
        try {
          const authService = new AuthService();
          const response = await authService.register(formData);
          
          // Check if we got a successful response
          if (response && response.success && response.data && response.data.token) {
            // Registration successful, redirect to dashboard
            window.location.href = '/dashboard';
          } else {
            // Handle case where response is successful but missing expected data
            console.error('Unexpected response format:', response);
            const message = response.message || 'Registration completed but encountered an unexpected response.';
            alert(message);
            if (response.success) {
              window.location.href = '/dashboard';
            }
          }
        } catch (error) {
          console.error('Registration error:', error);
          // Try to extract the most meaningful error message
          const errorMessage = error.message || 
                             (error.response && error.response.data && error.response.data.message) || 
                             'Registration failed. Please try again.';
          alert(errorMessage);
        }
      });
    });
  </script>

  <%- include('../partials/auth-footer') %>
</body>
</html> 