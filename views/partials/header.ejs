<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= typeof title !== 'undefined' ? title : 'Planner Buddy' %></title>
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- Custom CSS with theme color -->
  <style>
    :root {
      --primary-color: <%= typeof themeColor !== 'undefined' ? themeColor : '#72d1a8' %>;
    }
    
    body {
      padding-top: 56px;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .navbar-brand {
      font-weight: bold;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-primary:hover, .btn-primary:focus {
      background-color: var(--primary-color);
      filter: brightness(0.9);
      border-color: var(--primary-color);
    }
    
    .bg-primary {
      background-color: var(--primary-color) !important;
    }
    
    .text-primary {
      color: var(--primary-color) !important;
    }
    
    .navbar {
      background-color: var(--primary-color);
    }
    
    .navbar-dark .navbar-nav .nav-link {
      color: rgba(255, 255, 255, 0.85);
    }
    
    .navbar-dark .navbar-nav .nav-link:hover {
      color: rgba(255, 255, 255, 1);
    }
    
    .content {
      flex: 1;
      display: flex;
      padding: 20px;
    }
    
    .sidebar {
      width: 250px;
      background-color: #f8f9fa;
      padding: 20px;
      border-right: 1px solid #e9ecef;
    }
    
    .main-content {
      flex: 1;
      padding: 20px;
    }
    
    @media (max-width: 768px) {
      .content {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #e9ecef;
      }
    }
    
    /* Table styles */
    .table th {
      background-color: #f8f9fa;
    }
    
    .table td {
      white-space: normal;
      word-wrap: break-word;
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">Planner Buddy</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item user-menu d-none">
            <a class="nav-link" href="/todos/view/all"><i class="fas fa-tasks"></i> Todos</a>
          </li>
          <li class="nav-item user-menu d-none">
            <a class="nav-link" href="/appointments/view/calendar"><i class="far fa-calendar-alt"></i> Calendar</a>
          </li>
        </ul>
        <ul class="navbar-nav">
          <li class="nav-item admin-menu d-none">
            <a class="nav-link" href="/settings/view/admin"><i class="fas fa-cog"></i> Settings</a>
          </li>
          <li class="nav-item dropdown user-dropdown d-none">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              <i class="fas fa-user"></i> <span id="headerUsername"></span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/auth/profile"><i class="fas fa-id-card"></i> Profile</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
            </ul>
          </li>
          <li class="nav-item guest-menu">
            <a class="nav-link" href="/auth/login"><i class="fas fa-sign-in-alt"></i> Login</a>
          </li>
          <li class="nav-item guest-menu">
            <a class="nav-link" href="/auth/register"><i class="fas fa-user-plus"></i> Register</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  
  <!-- Content wrapper -->
  <div class="content">
    <div class="sidebar user-menu d-none d-md-block">
      <div class="d-grid gap-2">
        <a href="/todos/view/create" class="btn btn-primary mb-3">
          <i class="fas fa-plus"></i> New Todo
        </a>
        <a href="/appointments/view/create" class="btn btn-primary mb-3">
          <i class="fas fa-plus"></i> New Appointment
        </a>
      </div>
      <hr>
      <h6 class="sidebar-heading text-muted">
        <i class="fas fa-filter"></i> Quick Filters
      </h6>
      <ul class="nav flex-column">
        <li class="nav-item">
          <a class="nav-link" href="/todos/view/all?status=pending">
            <i class="far fa-clock"></i> Pending Todos
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/todos/view/all?status=completed">
            <i class="fas fa-check"></i> Completed Todos
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/todos/view/all?priority=high">
            <i class="fas fa-exclamation-circle"></i> High Priority
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/appointments/view/calendar?view=day">
            <i class="fas fa-calendar-day"></i> Today's Schedule
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/appointments/view/calendar?view=week">
            <i class="fas fa-calendar-week"></i> This Week
          </a>
        </li>
      </ul>
    </div>
    
    <!-- Main content -->
    <div class="main-content">

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Function to check if token is valid
    function checkAndHandleToken() {
      const token = localStorage.getItem('token');
      console.log('Token from localStorage:', token);
      
      if (!token) {
        console.warn('No token found in localStorage');
        return false;
      }
      
      try {
        // Decode token and check if it's expired
        const parts = token.split('.');
        if (parts.length !== 3) {
          console.error('Invalid token format');
          localStorage.removeItem('token');
          return false;
        }
        
        const payload = JSON.parse(atob(parts[1]));
        console.log('Decoded token payload:', payload);
        const exp = payload.exp * 1000; // Convert to milliseconds
        
        if (Date.now() >= exp) {
          console.error('Token expired');
          localStorage.removeItem('token');
          return false;
        }
        
        return { token, payload };
      } catch (e) {
        console.error('Error parsing token:', e);
        localStorage.removeItem('token');
        return false;
      }
    }
    
    // Check if user is logged in
    const tokenData = checkAndHandleToken();
    
    if (tokenData) {
      // Set username in header
      document.getElementById('headerUsername').textContent = tokenData.payload.username;
      
      // Show user menus and hide guest menus
      document.querySelectorAll('.user-menu').forEach(el => {
        el.classList.remove('d-none');
      });
      
      document.querySelector('.user-dropdown').classList.remove('d-none');
      
      document.querySelectorAll('.guest-menu').forEach(el => {
        el.classList.add('d-none');
      });
      
      // Show admin menu if user is admin
      if (tokenData.payload.username === 'admin') {
        document.querySelectorAll('.admin-menu').forEach(el => {
          el.classList.remove('d-none');
        });
      }
      
      // Add a global axios interceptor to include token in all requests
      if (typeof axios !== 'undefined') {
        axios.interceptors.request.use(function (config) {
          config.headers.Authorization = `Bearer ${tokenData.token}`;
          return config;
        });
      }
    }
    
    // Add event listener to logout button
    const logoutBtn = document.getElementById('logoutBtn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', function(e) {
        e.preventDefault();
        localStorage.removeItem('token');
        window.location.href = '/auth/login';
      });
    }
  });
</script> 